<Window x:Class="TransitTracker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:e="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=netstandard"
        xmlns:calcite="http://schemas.esri.com/calcite/2024"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:esri="http://schemas.esri.com/arcgis/runtime/2013"
        xmlns:framework="clr-namespace:TransitTracker.Framework"
        xmlns:vm="clr-namespace:TransitTracker.ViewModel"
        xmlns:local="clr-namespace:TransitTracker"
        mc:Ignorable="d" d:DataContext="{d:DesignInstance vm:MainViewModel}"
        DataContext="{Binding MainViewModel, Source={x:Static Application.Current}}"
        Title="Transit Tracker" Width="1366" Height="768" WindowState="Maximized">

    <Window.Resources>
        <Storyboard x:Key="ShadowColorAnimation">
            <ColorAnimation Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Color)" 
                            To="Red" Duration="0:0:1" />
        </Storyboard>

        <Style x:Key="FlyoutToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource CalciteButtonBaseStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1" 
                                CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="5" />
            <Setter Property="Cursor" Value="Hand" />
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="DarkGray" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Gray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="HeaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource CalciteTextBlockStyle}">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="LabelTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#666666"/>
        </Style>

        <Style x:Key="StatsTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="8,0"/>
            <Setter Property="Foreground" Value="#666666"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="HorizontalAlignment" Value="Right" />
        </Style>

        <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press" Name="Expander">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="UIElement.Focusable" Value="false" />
                                            <Setter Property="FrameworkElement.Width" Value="16" />
                                            <Setter Property="FrameworkElement.Height" Value="16" />
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
                                                            <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                                                                <Path.Data>
                                                                    <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                </Path.Data>
                                                                <Path.RenderTransform>
                                                                    <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA" />
                                                                <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#00FFFFFF" />
                                                            </Trigger>
                                                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                                <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                    <Setter.Value>
                                                                        <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959" />
                                                                <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>

                                <Border x:Name="Bd" HorizontalAlignment="Stretch" BorderThickness="{TemplateBinding Border.BorderThickness}"
                                        BorderBrush="{TemplateBinding Border.BorderBrush}" Padding="{TemplateBinding Control.Padding}"
                                        Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True" Grid.Column="1">
                                    <ContentPresenter x:Name="PART_Header"
                                                      Content="{TemplateBinding HeaderedContentControl.Header}"
                                                      ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                      ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                                      ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                                      ContentSource="Header"
                                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" />
                            </Grid>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                                <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="TreeViewItem.IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Panel.Background"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="TextElement.Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TreeViewItem.IsSelected" Value="True" />
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Panel.Background"
                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter Property="TextElement.Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TreeViewTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="4,0"/>
            <Setter Property="Foreground" Value="#333333"/>
        </Style>

        <Style x:Key="TreeViewHeaderTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="21"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="2"/>
        </Style>

        <Style x:Key="BorderStyle" TargetType="Border" BasedOn="{StaticResource CalciteFormBorderStyle}">
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" Opacity="0.2" BlurRadius="10"/>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!-- MapView -->
        <esri:MapView x:Name="_mapView" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2"
                      Map="{Binding Map}" esri:GeoViewController.GeoViewController="{Binding MapViewController}">
            <esri:MapView.Resources>
                <!-- Style override for the callout button -->
                <Style TargetType="Button" BasedOn="{StaticResource CalciteButtonBaseStyle}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderBrush" Value="DarkBlue"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Padding" Value="5"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Width" Value="32"/>
                    <Setter Property="Height" Value="32"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Grid>
                                    <Ellipse x:Name="ellipse" Fill="{TemplateBinding Background}"
                                                     Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                    <Image Source="{calcite:CalciteIconImage Icon=Popup, Scale=Large, SymbolSize=24, Brush=Blue}"
                                                   Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,2,2,0" />
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="ellipse" 
                                                                    Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" 
                                                                    To="LightBlue" Duration="0:0:0.2"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="ellipse" 
                                                                    Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" 
                                                                    To="DarkBlue" Duration="0:0:0.2"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </esri:MapView.Resources>

            <behaviors:Interaction.Triggers>
                <behaviors:EventTrigger EventName="GeoViewTapped">
                    <behaviors:InvokeCommandAction Command="{Binding GeoViewTappedCommand}" PassEventArgsToCommand="True" />
                </behaviors:EventTrigger>
            </behaviors:Interaction.Triggers>
        </esri:MapView>

        <!-- Logo -->
        <Border Grid.Row="0" Grid.Column="0"
                BorderBrush="#CCCCCC" BorderThickness="0,0,2,0" 
                HorizontalAlignment="Left" VerticalAlignment="Top"
                Style="{StaticResource BorderStyle}">
            <DockPanel Margin="8">
                <TextBlock DockPanel.Dock="Top" Text="Transit" Style="{StaticResource HeaderTextBlockStyle}" />
                <TextBlock DockPanel.Dock="Bottom" Text="Tracker" Style="{StaticResource HeaderTextBlockStyle}" Margin="0,-4,0,0" />
                <Image Source="{Binding TransitRoutes[0].Icon}" Width="48" Height="48" HorizontalAlignment="Center" />
            </DockPanel>
        </Border>

        <!-- Statistics Button -->
        <ToggleButton Grid.Row="0" Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Right"
                      Width="24" Height="24" 
                      IsChecked="{Binding ShowStatistics, Mode=TwoWay}"
                      Style="{StaticResource FlyoutToggleButtonStyle}">
            <Image Source="{calcite:CalciteIconImage Icon=ArrowBoldRight, Scale=Large, SymbolSize=16, Brush=Blue}"
                   Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,2,2,0" />
        </ToggleButton>

        <!-- Route Tree Button -->
        <ToggleButton Grid.Row="0" Grid.Column="0" VerticalAlignment="Bottom" HorizontalAlignment="Left"
                      Width="24" Height="24"
                      IsChecked="{Binding ShowTrainList, Mode=TwoWay}"
                      Style="{StaticResource FlyoutToggleButtonStyle}">
            <Image Source="{calcite:CalciteIconImage Icon=ArrowBoldDown, Scale=Large, SymbolSize=16, Brush=Blue}"
                   Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,2,2,0" />
        </ToggleButton>

        <!-- Observation Statistics Button -->
        <ToggleButton Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                      Width="24" Height="24" Margin="0,0,0,24"
                      IsChecked="{Binding ShowObservationStatistics, Mode=TwoWay}"
                      Style="{StaticResource FlyoutToggleButtonStyle}">
            <Image Source="{calcite:CalciteIconImage Icon=ArrowBoldLeft, Scale=Large, SymbolSize=16, Brush=Blue}"
                   Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,2,2,0" />
        </ToggleButton>

        <!-- Statistics -->
        <Border Grid.Row="0" Grid.Column="1" Background="#CCCCCC"
                Style="{StaticResource BorderStyle}"
                Visibility="{Binding ShowStatistics, Converter={framework:BoolToVisibilityConverter}}">
            <DockPanel>
                <Grid DockPanel.Dock="Left" Margin="8" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="Service Stats" Style="{StaticResource LabelTextBlockStyle}"
                               FontSize="16"  FontWeight="Bold" Margin="4,0,0,4" />

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Total Trains" Style="{StaticResource LabelTextBlockStyle}"/>
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding TrainStatistics.TotalTrains}" Style="{StaticResource StatsTextBlockStyle}" />

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="On Schedule" Style="{StaticResource LabelTextBlockStyle}" />
                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding TrainStatistics.OnScheduleTrains}" Style="{StaticResource StatsTextBlockStyle}"  />

                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Delayed" Style="{StaticResource LabelTextBlockStyle}" />
                    <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding TrainStatistics.DelayedTrains}" Style="{StaticResource StatsTextBlockStyle}"  />
                </Grid>

                <ItemsControl ScrollViewer.HorizontalScrollBarVisibility="Auto" ItemsSource="{Binding TransitRoutes}"
                              Background="Transparent" BorderBrush="Transparent">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Style="{StaticResource BorderStyle}" Margin="2,8">
                                <Grid VerticalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <Rectangle Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                                               Fill="{Binding RouteFeature.Attributes[Color], Converter={framework:RouteColorConverter}}"
                                               StrokeThickness="0" Height="20" Margin="0,0,0,4" />

                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Total Trains" Style="{StaticResource LabelTextBlockStyle}"/>
                                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding TrainStatistics.TotalTrains}"
                                               Style="{StaticResource StatsTextBlockStyle}" />

                                    <TextBlock Grid.Row="2" Grid.Column="0" Text="On Schedule" Style="{StaticResource LabelTextBlockStyle}" />
                                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding TrainStatistics.OnScheduleTrains}"
                                               Style="{StaticResource StatsTextBlockStyle}"  />

                                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Delayed" Style="{StaticResource LabelTextBlockStyle}" />
                                    <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding TrainStatistics.DelayedTrains}"
                                               Style="{StaticResource StatsTextBlockStyle}"  />
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </DockPanel>
        </Border>

        <!-- Route/Train TreeView -->
        <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                Width="350" Padding="8" HorizontalAlignment="Left" Margin="8"
                Style="{StaticResource BorderStyle}"
                Visibility="{Binding ShowTrainList, Converter={framework:BoolToVisibilityConverter}}">
            <TreeView ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding TransitRoutes}">
                <e:Interaction.Behaviors>
                    <framework:TreeViewSelectedItemBehavior SelectedItem="{Binding SelectedVehicle, Mode=TwoWay}" />
                </e:Interaction.Behaviors>

                <TreeView.Resources>
                    <Style x:Key="DelayTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource TreeViewTextBlockStyle}">
                        <Setter Property="Text" Value="{Binding VehicleEntity.Attributes[Delay], StringFormat='Delay: {0} min'}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsOnSchedule}" Value="True">
                                <Setter Property="Text" Value="On Schedule"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                    <!-- DataTemplate for Train -->
                    <DataTemplate DataType="{x:Type local:TransitVehicle}">
                        <Border>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="5"/>
                                    <Setter Property="BorderBrush" Value="#CCCCCC"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Padding" Value="8"/>
                                    <Setter Property="Margin" Value="4"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsOnSchedule}" Value="true">
                                            <Setter Property="Background" Value="Transparent"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsOnSchedule}" Value="false">
                                            <Setter Property="Background" Value="#80FF0000"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <DockPanel>
                                <DockPanel DockPanel.Dock="Left" MaxWidth="150">
                                    <Border DockPanel.Dock="Left" BorderBrush="Black" BorderThickness="0,0,1,0" Margin="-8,-8,4,-8">
                                        <DockPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                            <Image DockPanel.Dock="Top" Source="{Binding Converter={framework:TrainIconConverter}}"
                                                       Width="48" Height="48" HorizontalAlignment="Center" />
                                            <TextBlock Text="{Binding VehicleEntity.Attributes[TrainId]}"
                                                           HorizontalAlignment="Center" FontWeight="Bold"
                                                           Style="{StaticResource TreeViewTextBlockStyle}" />
                                        </DockPanel>
                                    </Border>
                                    <TextBlock DockPanel.Dock="Top" Text="{Binding VehicleEntity.Attributes[Status]}" FontWeight="Bold"
                                                   Style="{StaticResource TreeViewTextBlockStyle}" Margin="2" />
                                    <TextBlock Style="{StaticResource DelayTextBlockStyle}" Margin="2" />
                                </DockPanel>
                                <DockPanel DockPanel.Dock="Right">
                                    <TextBlock DockPanel.Dock="Top" Text="Stop" Style="{StaticResource TreeViewTextBlockStyle}" HorizontalAlignment="Center"/>
                                    <TextBlock Text="{Binding VehicleEntity.Attributes[StopName], Converter={framework:StationNameConverter}}" TextWrapping="Wrap" FontWeight="Bold"
                                                   Style="{StaticResource TreeViewTextBlockStyle}" HorizontalAlignment="Center" />
                                </DockPanel>
                            </DockPanel>
                        </Border>
                    </DataTemplate>

                    <!-- DataTemplate for Route -->
                    <HierarchicalDataTemplate DataType="{x:Type local:TransitRoute}" ItemsSource="{Binding Vehicles}">
                        <Border Background="{Binding RouteFeature.Attributes[Color], Converter={framework:RouteColorConverter}}" Margin="2">
                            <TextBlock Text="{Binding RouteFeature.Attributes[LongName]}" Margin="8,4" Style="{StaticResource TreeViewHeaderTextBlockStyle}" />
                        </Border>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
            </TreeView>
        </Border>

        <!-- Popup -->
        <framework:PopupBorder Grid.Row="1" Grid.Column="1" Width="400" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="24"
                               DataContext="{Binding SelectedVehicle.LastUpdated}"
                               Visibility="{Binding DataContext.IsPopupOpen, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={framework:BoolToVisibilityConverter}}">
            <StackPanel Margin="10" DataContext="{Binding DataContext.SelectedVehicle, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                <DockPanel>
                    <Border DockPanel.Dock="Bottom" BorderBrush="Black" BorderThickness="0,0,0,1" Margin="0,4" />
                    <Image DockPanel.Dock="Left" Source="{Binding Converter={framework:TrainIconConverter}}" Width="48" Height="48" />
                    <StackPanel Margin="12,0" VerticalAlignment="Center">
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Left" Text="Route: " FontWeight="Bold"/>
                            <TextBlock Text="{Binding VehicleEntity.Attributes[RouteId]}" Margin="4,0"/>
                        </DockPanel>
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Left" Text="Train: " FontWeight="Bold"/>
                            <TextBlock Text="{Binding VehicleEntity.Attributes[TrainId]}" Margin="4,0"/>
                        </DockPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,4,0,0">
                            <TextBlock Text="{Binding VehicleEntity.Attributes[Origin], Converter={framework:StationNameConverter}}" FontWeight="Bold"/>
                            <TextBlock Text=" to " />
                            <TextBlock Text="{Binding VehicleEntity.Attributes[Destination], Converter={framework:StationNameConverter}}" FontWeight="Bold"/>
                        </StackPanel>
                    </StackPanel>
                </DockPanel>

                <DockPanel>
                    <!-- Last update -->
                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Margin="4" HorizontalAlignment="Right">
                        <TextBlock Text="Updated: " FontWeight="Bold"/>
                        <TextBlock Text="{Binding VehicleEntity.Attributes[Timestamp], Converter={framework:UnixDateTimeConverter}}" Margin="4,0"/>
                    </StackPanel>
                    <!-- Status -->
                    <StackPanel Orientation="Horizontal" Margin="4">
                        <TextBlock Text="Status: " />
                        <TextBlock Text="{Binding VehicleEntity.Attributes[Status]}" Margin="4,0" FontWeight="Bold" />
                    </StackPanel>
                </DockPanel>

                <!-- stop and stop sequence -->
                <StackPanel Orientation="Horizontal" Margin="4">
                    <TextBlock Text="Stop: " />
                    <TextBlock Text="{Binding VehicleEntity.Attributes[StopName], Converter={framework:StationNameConverter}}" Margin="4,0" FontWeight="Bold"/>
                    <TextBlock Text="{Binding VehicleEntity, Converter={framework:TrainStopSequenceConverter}, StringFormat='({0})'}" Margin="4,0,4,0" />
                </StackPanel>

                <!-- Delayed or on-schedule -->
                <StackPanel Orientation="Horizontal" Margin="4,4,0,0">
                    <TextBlock Text="Service: " />
                    <TextBlock Text="{Binding VehicleEntity.Attributes[Delay], Converter={framework:TrainDelayConverter}}" Margin="4,0" FontWeight="Bold"/>
                </StackPanel>
            </StackPanel>
        </framework:PopupBorder>

        <!-- Observation Statistics -->
        <Border Grid.Row="1" Grid.Column="1" Background="#CCCCCC"
                HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,24,24"
                Style="{StaticResource BorderStyle}"
                Visibility="{Binding ShowObservationStatistics, Converter={framework:BoolToVisibilityConverter}}">
            <Grid Grid.IsSharedSizeScope="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!-- Headings -->
                <Grid Grid.Row="0" VerticalAlignment="Center" Margin="2,8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="ColumnGroup" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="ColumnGroup" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="ColumnGroup" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Name" HorizontalAlignment="Center" Style="{StaticResource LabelTextBlockStyle}" />
                    <TextBlock Grid.Row="0" Grid.Column="1" Text="Entities" HorizontalAlignment="Right" Style="{StaticResource LabelTextBlockStyle}" />
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="Observations" HorizontalAlignment="Right" Style="{StaticResource LabelTextBlockStyle}" />
                </Grid>

                <!-- ItemsControl -->
                <ItemsControl Grid.Row="1" ScrollViewer.VerticalScrollBarVisibility="Auto" ItemsSource="{Binding ObservationStatistics}"
                  Background="Transparent" BorderBrush="Transparent">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Style="{StaticResource BorderStyle}" Margin="2,8">
                                <Grid VerticalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="ColumnGroup" />
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="ColumnGroup" />
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="ColumnGroup" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding Name}" Style="{StaticResource LabelTextBlockStyle}" />
                                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding TotalEntities, StringFormat=N0}" Style="{StaticResource StatsTextBlockStyle}" />
                                    <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding TotalObservations, StringFormat=N0}" Style="{StaticResource StatsTextBlockStyle}" />
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </Border>
    </Grid>
</Window>
